# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-01-04 09:01
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AriticleColumn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.CharField(max_length=200, verbose_name='私有栏目名称')),
                ('created', models.DateField(auto_now_add=True, verbose_name='创建日期')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_column', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '私有栏目管理',
                'verbose_name_plural': '私有栏目管理',
            },
        ),
        migrations.CreateModel(
            name='AriticlePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='话题名称')),
                ('slug', models.SlugField(max_length=500, verbose_name='地址')),
                ('body', models.TextField(verbose_name='话题内容')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建日期')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name': '问题主题内容管理',
                'verbose_name_plural': '问题主题内容管理',
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=24, verbose_name='问题标签')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag', to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '问题标签管理',
                'verbose_name_plural': '问题标签管理',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentator', models.CharField(max_length=90, verbose_name='回答问题的人')),
                ('body', models.TextField(verbose_name='答案的内容')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='答案创建时间')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='article.AriticlePost', verbose_name='问题外键')),
            ],
            options={
                'verbose_name': '问题答案管理',
                'verbose_name_plural': '问题答案管理',
                'ordering': ('-created',),
            },
        ),
        migrations.AddField(
            model_name='ariticlepost',
            name='article_tag',
            field=models.ManyToManyField(blank=True, related_name='article_tag', to='article.ArticleTag', verbose_name='问题标签'),
        ),
        migrations.AddField(
            model_name='ariticlepost',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='ariticlepost',
            name='column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_column', to='article.AriticleColumn', verbose_name='话题栏目名称'),
        ),
        migrations.AddField(
            model_name='ariticlepost',
            name='users_like',
            field=models.ManyToManyField(blank=True, related_name='articles_like', to=settings.AUTH_USER_MODEL, verbose_name='点赞数'),
        ),
        migrations.AlterIndexTogether(
            name='ariticlepost',
            index_together=set([('id', 'slug')]),
        ),
    ]
